function pca_preproc(pn)
% function pca_preproc(pn)
%   pn = data path. if empty, assumes data are in a folder 'data' such that:
%   current directory is 'code,' and 'data' and 'code' are in same folder
% Load physiology data
% Read AW snr data .xlsx
if ~exist('pn','var') || isempty(pn)
    pn=['.' filesep '..' filesep 'data' filesep];
end

fn='SNrInVivoData_wRest_FINAL_v7.xlsx';
fn2='SynchronyData_6-6-18_useable_updated.xlsx';
fn3='GradualProtocolDuration.xlsx';

%Protocol Duration:
[~,~,gradpdur]=xlsread([pn fn3],'Gradual','A2:D30');
[~,~,asynpdur]=xlsread([pn fn3],'Alpha-Syn','A2:D11');
dur_ID=[gradpdur(:,2) ; asynpdur(:,2)];
dur_val=cell2mat([gradpdur(:,4) ; asynpdur(:,4)]);

%New synch:
[~,~,psync]=xlsread([pn fn2],'Sheet1','A2:D81');
ps_ID=psync(:,2);
ps_val=cell2mat(psync(:,3));
contra=cell2mat(psync(:,4)); %2 == contra

%All Categories:
sheets={'Grad85','Grad60','Grad30','Gradual5'...
    'Acute',...
    'ASyn30','ASyn60','ASyn85',...
    'UniDepl',...
    'Ipsi(Depl)Asym','ContraAsym','UniCtl','Ctl'};

rows={'M3:Z274','M3:Z320','M3:Z320','M3:Z295',...
    'L3:Y247',...
    'M3:Z152','M3:Z157','M3:Z100',...
    'M3:Z138',...
    'M3:Z360','M3:Z267','M3:Z96','I3:V264',};

ids={'AA3:AA1000','AA3:AA1000','AA3:AA1000','AA3:AA1000',...
    'Z3:Z1000',...
    'AA3:AA1000','AA3:AA1000','AA3:AA1000',...
    'AA3:AA1000',...
    'AA3:AA1000','AA3:AA1000','AA3:AA1000','W3:W1000'};

type=1:length(sheets);

cols={'%SpikesInBurst','MeanFreq','CVisi','Synch'};
data=[];
types=[];
pnfn=[pn fn];
mouseID={};
mcount=0;
for i=1:length(sheets)
    sheet=sheets{i}; 
    dat=xlsread(pnfn,sheet,rows{i});
    data=[data;dat];
    types=[types; ones(size(dat,1),1)*type(i)];
%     mnum=xlsread(pnfn,sheet,'B3:B1000');
    [~,mnum]=xlsread(pnfn,sheet,ids{i});
%     if ismember(shees{i},{'UniDepl','1injIntactAsym','2injIntactAsym','5injIntactAsym'...
%        '1injDeplAsym','2injDeplAsym','5injDeplAsym','UniCtl'})
%         mnum=[
%     else
        um=unique(mnum);
        mouseID=[mouseID; mnum];
%     end
    if length(mnum) ~= size(dat,1)
        fprintf('Warning: Mismatch in %s.\n',sheet)
    end
    mcount=mcount+length(um);
end



%
%add percent synchronous pairs as column 15
data=[data nan(size(data,1),1)];
for i=1:length(ps_ID)
    mID=mouseID;
    if contra(i)==2
        useID={sprintf('%s_%d',ps_ID{i},11), sprintf('%s_%d',ps_ID{i},12)};
    else
        useID=ps_ID{i};
    end
    ind=ismember(mID,useID);
    tt(i)=sum(ind);
    data(ind,15)=ps_val(i);
end

%add protocol duration as column 16:
data=[data nan(size(data,1),1)];
for i=1:length(dur_ID)
    ind=ismember(mouseID,dur_ID{i});
    data(ind,16)=dur_val(i);
end
% mouseID0=mouseID;

%%%%
useSeparateCond_As_Mice=1;
if useSeparateCond_As_Mice==1
   for i=1:length(mouseID)
      mouseID{i}=[mouseID{i} sprintf('_%d',types(i))]; 
   end
end

useResponse=data(:,9); % Velocity
xlab={'%SB','FR','CV','Synch'};
% [1,4,6,15];
%include vel as variable for PCA:
xlab=[xlab 'Vel'];
% t=types(~xx & ind);

% Load in raw %TH values

%All Categories:
% sheets={'Grad85','Grad60','Grad30','Gradual5'...
%     'Acute',...
%     'ASyn30','ASyn60','ASyn85',...
%     'UniDepl','1injIntactAsym','2injIntactAsym','5injIntactAsym'...
%     '1injDeplAsym','2injDeplAsym','5injDeplAsym','UniCtl','Ctl'};
% 
% rows={'G3:I274','G3:I320','G3:I320','G3:I295',...
%     'F3:H247',...
%     'G3:I152','G3:I157','G3:I100',...
%     'G3:I138','G3:I112','G3:I136','G3:I86'...
%     'G3:I175','G3:I177','G3:I114','G3:I96','G3:I264','none'};
rows={'G3:I274','G3:I320','G3:I320','G3:I295',...
    'F3:H247',...
    'G3:I152','G3:I157','G3:I100',...
    'G3:I138',...
    'G3:I360','G3:I267','G3:I96','G3:I264','none'};
data2=[];
side=['L','R'];
skeep=[];
for i=1:length(sheets)
    sheet=sheets{i}; 
    [~,~,dat]=xlsread(pnfn,sheet,rows{i}); 
    if i==length(sheets) %control
        data2=[data2;ones(size(dat,1),1)*100];
        temp=cell(size(dat,1),1);
        temp(:)={'LR'};
        skeep=[skeep; temp];
    else
        sides=dat(:,1);
        lval=cell2mat(dat(:,2));
        rval=cell2mat(dat(:,3));
        dat=zeros(size(dat,1),1);
        dat(ismember(sides,side(1)))=lval(ismember(sides,side(1)));
        dat(ismember(sides,side(2)))=rval(ismember(sides,side(2)));
        data2=[data2;dat];
        skeep=[skeep;sides];
    end
end

useSeparateHems_As_Mice=0;
if useSeparateHems_As_Mice==1
   for i=1:length(mouseID)
      mouseID{i}=[mouseID{i} skeep{i}]; 
   end
end

th_values=data2;
display('Finished')


%% Compile all PC scores for summary
% pn='C:\Users\Gittis\Dropbox\Gittis Lab Data\AWSNR\';

abrev={'G85','G60','G30','G05','BA','A30','A60','A85',...
    'UDep','AsymDep','AsymCtrl','UCtrl','Ctrl'};
usePredictors=[1,4,6,15];

grad=ismember(types,[1:4,13]);
grad_ba=ismember(types,[1:5,13]);
asyn=ismember(types,[6:8,13]);
ind=ismember(types,[1:13]); %All conditions or use subset
xx=any(isinf(data(:,[usePredictors,9])) | isnan(data(:,[usePredictors,9])),2); %Exclude bad data and others
dat=data(~xx & ind,usePredictors);
tempTH=th_values;
useTH=th_values(~xx & ind);
isSkew=[1 0 1 1];
datRaw=dat;
for i=1:length(isSkew)
    if isSkew(i)
        dat(:,i)=log10(dat(:,i));
        dat(isinf(dat(:,i)),i)=0;
    end
end
xlab={'%SB','FR','CV','Synch'};
t=types(~xx & ind);
useData=dat;
useInts=1; %Use interactions for physiology data?
if useInts==1
    ints=combntns(1:(size(useData,2)),2);
    for i=1:size(ints,1)
        useData=[useData useData(:,ints(i,1)).*useData(:,ints(i,2))];
    end
else
    ints=[];
end

w = 1./var(useData);
[wcoeff,physscore,latent,tsquared,explained_phys] = pca(useData,...
    'VariableWeights',w,'centered','on');
physCoeff = inv(diag(std(useData)))*wcoeff;
physUseData=useData;
behave=[9:10, 13, 14]; %Velocity, rearing, total pole, wire hang
useData=data(~xx & ind,behave);
useMouse=mouseID(~xx & ind);
durs=data(~xx & ind,16);
t=types(~xx & ind);
useLog=[1 0 1 1];
for i=1:length(useLog)
    if useLog(i)==1
        useData(:,i)=log10(useData(:,i));
        useData(isinf(useData(:,i)),i)=0;
    end
end
behaveUseData=useData;
a=unique(useMouse);
clear data_mouse score_mouse type_mouse keep_score keep_mouse ...
      data_mouse_raw p_dur th_mouse
  
for j=1:length(a)
    mouse=ismember(useMouse,a{j});
    type_mouse(j)=mode(t(mouse));
    data_mouse(j,:)=nanmean(behaveUseData(mouse,:),1);
    for i=1:4
        if isSkew(i)
            data_mouse_raw(j,i)=nanmedian(datRaw(mouse,i),1);
        else
            data_mouse_raw(j,i)=nanmean(datRaw(mouse,i),1);
        end
    end
    keep_mouse{j}=a{j};
    keep_score(j,:)=nanmean(physscore(mouse,:),1);
    p_dur(j,:)=mode(durs(mouse,1));
    th_mouse(j,1)=nanmean(useTH(mouse));
end

sign_invert=0; %Depends on whether sign convention assigned to chosen
%data subset matches sign convention of the paper
if sign_invert==1
    keep_score=-keep_score;
    physCoeff=-physCoeff;
end

useInts=1; %Decide whether interactions used for behavior data (
if useInts==1
    ints=combntns(1:(size(data_mouse,2)),2);
    for i=1:size(ints,1)
        data_mouse=[data_mouse data_mouse(:,ints(i,1)).*data_mouse(:,ints(i,2))];
    end
end

w = 1./var(data_mouse);
[wcoeff,score,latent,tsquared,explained_behav] = pca(data_mouse,...
    'VariableWeights',w);
behavCoeff=inv(diag(std(data_mouse)))*wcoeff;
% xlab={'V','R','TDLat','TravP','TotP', 'WHL'};

allDat=[keep_mouse',num2cell(th_mouse),abrev(type_mouse)',...
    num2cell(keep_score(:,1)), num2cell(keep_score(:,2)),...
    num2cell(keep_score(:,3)),...
    num2cell(score(:,1)), num2cell(score(:,2)),...
    num2cell(data_mouse_raw),num2cell(data_mouse),...
    num2cell(p_dur)]; 
cols=[cellstr('Mouse'),cellstr('%TH'), cellstr('Type'), ...
    cellstr('Phys PC1 Score'), ...
    cellstr('Phys PC2 Score'),cellstr('Phys PC3 Score'), ...
    cellstr('Behav PC1 Score'),cellstr('Behav PC2 Score'),...
    xlab,'Vel','Rear','TotePole','WireHang','Protocol Duration'];
allDat=[cols; allDat];
% fnSave='4_behavs_all_states+raw_no_ints_2';
fnSave='4_behavs_all_states+all_ints_5';

xlswrite([pn 'MouseLevel' filesep fnSave '.xlsx'],allDat)
behaveCoeff=wcoeff;
% save([pn 'MouseLevel' filesep fnSave '.mat'],'allDat','physCoeff',...
%     'behavCoeff','usePredictors','pn','fn','fn2','fn3','data_mouse',...
%     'physUseData',...
%     'useTH','explained_behav','explained_phys','ints','useInts')
display('Finished')

%% Alternatively, load these data in:
% pn='C:\Users\Gittis\Dropbox\Gittis Lab Data\AWSNR\';
pn='C:\Dropbox\Gittis Lab Data\AWSNR\';
% [~,~,d]=xlsread([pn '\MouseLevel\mouse_score_summary_no_ints.xlsx']);

% phys=cell2mat(d(2:end,4:5));
% behav=cell2mat(d(2:end,6));
% [~,~,d]=xlsread([pn '\MouseLevel\4_behavs_with_all_states+raw_noints_2.xlsx']);
% fn2='4_behavs_with_all_states+raw_all_ints_2';
% fn2='4_behavs_grad_only+raw_all_ints_2';
fn2='4_behavs_grad_only+raw_no_ints_2';
[~,~,d]=xlsread([pn sprintf('\\MouseLevel\\%s.xlsx',fn2)]);
load([pn sprintf('\\MouseLevel\\%s.mat',fn2)])
% [~,~,d]=xlsread([pn '\MouseLevel\4_behavs_with_all_states+raw_selected_ints_1.xlsx']);
fr=cell2mat(d(2:end,10));
sb=cell2mat(d(2:end,9));
cv=cell2mat(d(2:end,11));
syn=cell2mat(d(2:end,12));

% [~,~,d]=xlsread([pn '\MouseLevel\mouse_3x2score_summary_nobehaveorphys_ints.xlsx']);
phys=cell2mat(d(2:end,4:6));
% phys=logmodulus(cell2mat(d(2:end,4:6)));
% physCoeff=-physCoeff;
zphys1=nanzscore(phys(:,1),[],1);
zphys2=nanzscore(phys(:,2),[],1);
zphys3=nanzscore(phys(:,3),[],1);
behav=cell2mat(d(2:end,7:8));
zbehave1=nanzscore(behav(:,1),[],1);

type=d(2:end,3);
px=(phys(:,1));
th=cell2mat(d(2:end,2));
th(th<=0)=1e-10;

anID=d(2:end,1);
for i=1:length(anID)
   anID{i}=anID{i}(1:8);
    
end
% zbehave2=nanzscore(behav(:,2),[],1);


% zphys1=phys(:,1);
% zphys2=phys(:,2);
% zphys3=phys(:,3);
% zphys1=nanzscore(phys(:,1),[],1);
% zphys2=nanzscore(phys(:,2),[],1);
% zphys3=-nanzscore(phys(:,3),[],1);
asyn=ismember(type,{'A30','A60','A85'});
grad=ismember(type,{'G30','G60','G85'});
ctl=ismember(type,{'Ctrl'});
ba=ismember(type,{'BA'});
isEndStage=ismember(type,{'BA','G05'});
allgrad=ismember(type,{'G05','G30','G60','G85'});
% unictrl=ismember(type,'UCtrl');
% unidep=ismember(type,'UDep');
% asymContra=ismember(type,{'1IIA','2IIA','5IIA','AsymCtrl'});
% asymIpsi=ismember(type,{'1IDA','2IDA','5IDA','AsymDep'});

% Only use paired unilateral mice:
uniContra=ismember(type,'UCtrl');
uniIpsi=ismember(type,'UDep');
anTemp=unique([anID(uniIpsi);anID(uniContra)]);
coan=anTemp(ismember(anTemp,anID(uniContra)) & ismember(anTemp,anID(uniIpsi)));
isPaired= ismember(anID,coan);
uniIpsi= uniIpsi & isPaired;
uniContra= uniContra & isPaired;


asymContra=ismember(type,{'1IIA','2IIA','5IIA','AsymCtrl'});
asymIpsi=ismember(type,{'1IDA','2IDA','5IDA','AsymDep'});
anTemp=unique([anID(asymIpsi);anID(asymContra)]);
coan=anTemp(ismember(anTemp,anID(asymContra)) & ismember(anTemp,anID(asymIpsi)));
isPaired= ismember(anID,coan);
asymIpsi= asymIpsi & isPaired;
asymContra= asymContra & isPaired;


display('Finished')

%% Figure 5 Plot Physiology PCA reconstructions:

figure
ylab={'B','FR','IR','SYN'};
reOrder=[2 3 1 4]; 
useInts=0;
r=4;c=1;
d0={};
subinds=subplot_indexer(r,c);
flipSign=0; %of all
usePCs=1:3;
if useInts==1
    reOrder=[reOrder length(reOrder)+ (1:size(ints,1))];
    for i=1:size(ints,1)
        newLab{i}=sprintf('%s x %s',ylab{ints(i,1)},ylab{ints(i,2)});
    end
    allLab=[ylab newLab];
else
    allLab=ylab;
end
out=physCoeff(:,usePCs);
ind=asyn | allgrad | ba | ctl;
zscale=0.5;
lab={'Dep','30','60','85','Ctl'};
bins=[0 15 48 73 100];
useBins=[1 3 5];
% useBins=1:5;
lab=lab(useBins);
% lab={'Dep','50','Ctl'};
% bins=[0 30 100];
for i=usePCs   
    
    if flipSign==1
        out(:,i)=-out(:,i);
    end


    subplot(r,c,subinds(i,1))
%         %Naive:
%     temp=mean(naiveScore(:,i)*out(:,i)',1);
%     imagesc(temp(reOrder)')
%     set(gca,'ytick',1:size(out,1),...
%     'yticklabel',allLab(reOrder),'xtick',1,'xticklabel','Naive',...
%     'clim',[-1 1].*zscale)
%    
%     subplot(r,c,subinds(i,2))
%     
%     %Endstage:
%     temp=mean(endStageScore(:,i)*out(:,i)',1);
%     
%     imagesc(temp(reOrder)')
%     set(gca,'ytick',1:size(out,1),'yticklabel',{},'xtick',1,...
%         'xticklabel','End-stage','clim',[-1 1].*zscale)


    [~,ind1]=histc(th,bins);
    temp=[];
    for ii=1:length(useBins)
        d0=phys(ind1==useBins(ii) & ind,i);
        temp=[temp;mean(d0*out(:,i)',1)];
    end
    imagesc(fliplr(temp(:,reOrder)'))
    set(gca,'ytick',1:size(out,1),...
        'yticklabel',allLab(reOrder),'xtick',1:length(bins),...
        'xticklabel',fliplr(lab),'clim',[-1 1].*zscale)
end
%  xlabel('PC')
 
 subplot(r,c,subinds(i+1,:))
     imagesc(temp(reOrder)')
    set(gca,'ytick',1:size(out,1),'xtick',usePCs,...
    'clim',[-1 1].*zscale)
colorbar
colormap colorblind_cm
bi_Plot_Corrections

set(gcf,'pos',[680   215   184   763])
% bi_Plot_Corrections
% Figure 5a
 figure; 
 subplot(2,1,1)
 bar((physCoeff(reOrder,1)),'k')
  subplot(2,1,2)
 bar((physCoeff(reOrder,2)),'k')
bi_linkaxes('y')
ylim([-1 1])
set(gcf,'pos',[680   833   174   145])

%% Figure 5 Proportions of cells with expected changes
abrev={'G85','G60','G30','G05','BA','A30','A60','A85',...
    'UDep','AsymDep','AsymCtrl','UCtrl','Ctrl'};
usePredictors=[1,4,6,15];
ind=ismember(types,[1:8 13]);
ylab={'FR','IR','B','SYN'};
reOrder=[2 3 1 4]; 

xx=any(isinf(data(:,[usePredictors,9])) | isnan(data(:,[usePredictors,9])),2);
dat=data(~xx & ind,usePredictors);
tempTH=th_values;
useTH=th_values(~xx & ind);
isSkew=[1 0 1 1];
datRaw=dat;
for i=1:length(isSkew)
    if isSkew(i)
        dat(:,i)=log10(dat(:,i));
        dat(isinf(dat(:,i)),i)=0;
    end
end
zdat=nanzscore(dat(:,reOrder),[],1);
useFeats=1:3;
lab={'Dep','30','60','85','Ctl'};
bins=[0 15 48 73 100];
useBins=1:5;
lab=lab(useBins);
[cc,ind1]=histc(useTH,bins);
clear a fracEach fracAll

for zthresh=0.25:1:1.25
% zthresh=0.5;
for i=1:length(useBins)    
    ind0=ind1==useBins(i);    
    for ii=1:length(useFeats)
        a(:,ii)= abs(zdat(:,useFeats(ii))) > zthresh & ind0;
        fracEach(ii,i)=sum(a(:,ii))/sum(ind0);
    end
    fracAll(i)=sum(~any(a==0,2)) / sum(ind0);
end
fracEach=bsxfun(@minus,fracEach,min(fracEach,[],1));
% end
figure
subplot(1,2,1)
imagesc(fracEach*100)
set(gca,'ytick',1:length(useFeats),'yticklabel',ylab(useFeats),...
    'xtick',1:length(useBins),'xticklabel',lab(useBins),'xdir','reverse');
title(sprintf('%1.2f',zthresh))
colorbar
subplot(1,2,2)
% fracAll=fracAll-min(fracAll(:));
plot(fracAll*100)
set(gca,'xtick',1:length(useBins),'xticklabel',lab(useBins),'xdir','reverse');
set(gcf,'pos',[ 680   791   560   187])

end
%%
m=0;
figure 
hold on
for zthresh=0.1:0.05:1
    m=m+1;
    for i=1:length(useBins)
        ind0=ind1==useBins(i);
        for ii=1:length(useFeats)
            a(:,ii)= abs(zdat(:,useFeats(ii))) > zthresh & ind0;
            fracEach(ii,i)=sum(a(:,ii))/sum(ind0);
        end
        fracAll(i)=sum(~any(a==0,2)) / sum(ind0);
    end
    plot(fracAll*100)    
end

%% Figure 1F: Plot mean gradual behavior score vs. protocol duration:
% g=unique(type(allgrad | ctl));
% k={};m=[];ci=[];usePC=1;
% bl=-logmodulus(behav(:,usePC));
% % bl=-(behav(:,usePC));
% ctrlmean=mean(bl(ismember(type,'Ctrl')));
% for i=1:length(g)
%    gind=ismember(type,g{i});
%    k{i}=bl(gind,usePC) ; %PC1 normalized to control 
%    m(i,1)=mean(k{i});
% %    ci(i,1)=stdErr(k{i},1)
% end
% a=min(m);
% 
% for i=1:length(k)
%     norm= (k{i}-a)/abs(ctrlmean);
% %     norm= logmodulus((k{i}-a)/abs(ctrlmean));
% %     norm= ((k{i}-ctrlmean));
% %    norm= (k{i}-ctrlmean);
%    norm=norm*100;
%    m(i,1)=mean(norm);
%    ci(i,1)=stdErr(norm,1);
% end
% figure;
% 
% % %Manually break axis:
% % mi=m<=1000;
% % subplot(2,1,2)
% % errorbar(find(mi),m(mi),ci(mi),'-ok')
% % set(gca,'ytick',[0:25:150])
% % ylim([0 150])
% % subplot(2,1,1)
% % % errorbar(find(~mi),m(~mi),ci(~mi),'-ok')
% % errorbar(find(mi),m(mi),ci(mi),'-ok')
% % ylim([150 500])
% % set(gca,'ytick',150:100:500)
% % bi_linkaxes('x')
% % xlim([0 6])
% 
% %No Break
% mi=m<=1000;
% % subplot(2,1,2)
% errorbar(find(mi),m(mi),ci(mi),'-ok')
% hold on 
% plot([0 6],[100 100],'--k')
% xlim([0 6])
% bi_Plot_Corrections
% 
% set(gca,'ytick',[-50:50:500])
% ylim([-50 500])
%% Figure 3C 
x=0:100;
figure
%Separate out Unilaterals:
% ind=allgrad | ba | ctl
ind= ctl|  allgrad ;
i=1;
fittypes={'poly2','poly1'};
%Fit and plot behavior PC1 scores vs th
[xData, yData] = prepareCurveData( th(ind),behav(ind,i) );
ft = fittype( fittypes{i} );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Robust = 'off'
opts.Normalize = 'off';
[fitresult2, gof] = fit( xData, yData, ft, opts );
p2 = predint(fitresult2,x,0.95,'functional','off');
%     plot(xData,yData,'.k');
hold on
plot(x,fitresult2(x),'k')
%     [px,py]=stdErrColor(x,p2(:,1),p2(:,2));
%     patch(px,py,'k')
plot(x,p2,'--k')

%     plot(th(ctl),behav(ctl,1),'dk')
t=[mean(behav(ctl,i),1),stdErr(behav(ctl,i),1)];
errorbar(mean(th(ctl)),t(1),t(2),'dk')
%     plot(mean(th(ctl)),behav(ctl,1),'dk')
plot([0 100],mean(behav(ctl,1)).*[1 1],'--k')
plot(th(allgrad),behav(allgrad,1),'om')

%     plot(th(ba),behav(ba,1),'^b')
t=[mean(behav(ba,i),1),stdErr(behav(ba,i),1)];
errorbar(mean(th(ba)),t(1),t(2),'^b')

title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
xlabel('%TH Remaining')
ylabel(sprintf('Behavior PC%d Score',i))
set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
% [c,ind]=histc(th,bins);
% for i=1:3
%     d0={};
%     subplot(3,1,i)
%     for ii=1:length(bins)        
%         d0{ii}=phys(ind==ii,i);
%     end
%     exOut=[]; isPaired=0; anovaFirst=1; mc=1; useWilcox=0; negError=1; plotMedians=0;
%     [h,pAll,mseO]=barMeanSig2(d0,lab,{[1 5]},{'k'},...
%         exOut,isPaired,anovaFirst,mc,useWilcox,negError,plotMedians);
%     ylabel(sprintf('PC %d',i))
% end
xlim([0 105])
set(gcf,'pos',[680   650   337   328])
%% Figure 5b gradual PC1 physiology trajectory
x=0:100;
figure
r=1;c=1;
usePC=1;
subinds=subplot_indexer(r,c);

ind=allgrad | ctl;
% ind= allgrad | ctl ;
% ind=asyn | allgrad | ba | ctl;
% ind= asyn | ctl  ;
fittypes={'poly3','poly2','poly1'};
Robust={'off','off','off'};
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind),phys(ind,usePC) );
    
    ft = fittype( fittypes{usePC} );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = Robust{usePC};
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    hold on
    plot(x,fitresult2(x),'k')
    plot(x,p2,'--k')
    
    t=[mean(phys(ctl,usePC),1),stdErr(phys(ctl,usePC),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
    plot([0 100],mean(phys(ctl,usePC)).*[1 1],'--k')
    plot(th(allgrad),phys(allgrad,usePC),'om')
    t=[mean(phys(ba,usePC),1),stdErr(phys(ba,usePC),1)];
    errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Physiology PC%d Score',usePC))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
% ylim([-3 2])
set(gcf,'pos',[680   650   337   328])
%% Figure 5e asyn PC2 physiology trajectory
x=25:100;
% x=0:100;
figure
r=1;c=1;
usePC=1;
subinds=subplot_indexer(r,c);

% ind=allgrad | ba | ctl;
% ind= allgrad | ctl  ;
ind= asyn | ctl  ;
fittypes={'poly2','poly1','poly1'};
Robust={'off','off','off'};
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind),phys(ind,usePC) );
    
    ft = fittype( fittypes{usePC} );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = Robust{usePC};
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
%     plot(xData,yData,'.k');
    hold on
    plot(x,fitresult2(x),'k')
%     [px,py]=stdErrColor(x,p2(:,1),p2(:,2));
%     patch(px,py,'k')
    plot(x,p2,'--k')
    
%     plot(th(ctl),behav(ctl,1),'dk')
    t=[mean(phys(ctl,usePC),1),stdErr(phys(ctl,usePC),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
%     plot(mean(th(ctl)),phys(ctl,1),'dk')
    plot([0 100],mean(phys(ctl,usePC)).*[1 1],'--k')
%     plot(th(allgrad),phys(allgrad,usePC),'om')
    plot(th(asyn),phys(asyn,usePC),'oc')
    
%     plot(th(unidep),phys(unidep,usePC),'og')
%     plot(th(asymContra),phys(asymContra,usePC),'or')
%     plot(th(ba),phys(ba,usePC),'^b')
    t=[mean(phys(ba,usePC),1),stdErr(phys(ba,usePC),1)];
    errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Physiology PC%d Score',usePC))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
ylim([-2 3])
set(gcf,'pos',[680   650   337   328])
%% Figure 5 all mice PC1 physiology trajectory
x=0:100;
figure
r=1;c=1;
usePC=1;
subinds=subplot_indexer(r,c);
ind=asyn | allgrad | ba | ctl;
fittypes={'poly3','poly2','poly1'};
Robust={'LAR','off','off'};
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind),phys(ind,usePC) );
    
    ft = fittype( fittypes{usePC} );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = Robust{usePC};
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
%     plot(xData,yData,'.k');
    hold on
    plot(x,fitresult2(x),'k')
%     [px,py]=stdErrColor(x,p2(:,1),p2(:,2));
%     patch(px,py,'k')
    plot(x,p2,'--k')
    
%     plot(th(ctl),behav(ctl,1),'dk')
    t=[mean(phys(ctl,usePC),1),stdErr(phys(ctl,usePC),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
%     plot(mean(th(ctl)),phys(ctl,1),'dk')
    plot([0 100],mean(phys(ctl,usePC)).*[1 1],'--k')
%     plot(th(ind),phys(ind,usePC),'ok')

    t=[mean(phys(ba,usePC),1),stdErr(phys(ba,usePC),1)];
%     errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Physiology PC%d Score',usePC))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
ylim([-2 3])
set(gcf,'pos',[680   650   337   328])

%% Figure 5 PC1 and PC2 fits compared to behavior:
% zphys=-nanzscore(phys(:,1),[],1);
abrev={'G85','G60','G30','G05','BA','A30','A60','A85',...
    'UDep','AsymDep','AsymCtrl','UCtrl','Ctrl'};
r=2;c=2;
x=0:100;
figure
subinds=subplot_indexer(r,c);

ind=ba | ctl |  allgrad;
zd={zphys1(ind), zphys2(ind), zphys3(ind)};
fit_types={'poly3','poly1','poly1'};
Robust={'off','off','off'};
clear cc
for i=1:c
    % NORMALIZED scores and fits:
    [xData, yData] = prepareCurveData( th(ind), zd{i} );
    ft = fittype(fit_types{i} );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
     
    opts.Normalize = 'off';
    opts.Robust=Robust{i};
    [fitresult1, gof1] = fit( xData, yData, ft, opts );
    p1 = predint(fitresult1,x,0.95,'functional','off');
    [xData, yData] = prepareCurveData( th(ind), zbehave1(ind) );
    ft = fittype( 'poly2' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'LAR';
    opts.Normalize = 'on';
    [fitresult2, gof2] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    
    
    subplot(r,c,subinds(1,i))
    y1=fitresult1(x)-fitresult1(100);
    h=plot(x,y1,'r');
    hold on
    h.DisplayName= 'Physiology PC1';
    y2=fitresult2(x) - fitresult2(100);
    h=plot(x,y2,'b');
    h.DisplayName= sprintf('Behavior PC%d',i);
    plot([0 100],[0 0],'--b')
    ylabel(sprintf('Normalized Scores',i))
    xlabel('%TH Remaining')
     set(gca,'Xdir','reverse','xtick',0:25:100)
    title(sprintf('Adj R-sqr: %1.3f',gof1.adjrsquare))
    ylim([-3 1.5])
    
    %Sliding pearson correlation of fits plot:
    subplot(r,c,subinds(2,i))
    y1=fitresult1(x);
    y2=fitresult2(x);    
%     [cc(:,i),pp,nn]=movcorr(y1,y2,3,'Endpoints','fill');
    ct=xcorr(y1,y2);
    cc(:,i)=ct(101:end);
%     [cc2]=xcorr2(y1,y2);
%     cc(pp>0.05,i)=nan;
    plot(x,cc(:,i),'r')
    hold on
    ylim([-20 20])
    plot([0 100],[0 0 ],'--k')
    ylabel('Correlated')
    xlabel('%TH Remaining')
    set(gca,'Xdir','reverse','xtick',0:25:100)
end
bi_linkaxes('x')
 set(gca,'Xdir','reverse','xtick',0:25:100)
set(gcf,'pos',[ 930   402   468   225])

%% Figure 5 PC1 and PC2 fits broken up by mouse model
% zphys=-nanzscore(phys(:,1),[],1);
abrev={'G85','G60','G30','G05','BA','A30','A60','A85',...
    'UDep','AsymDep','AsymCtrl','UCtrl','Ctrl'};
r=2;c=4;
x=0:100;
figure
subinds=subplot_indexer(r,c);

allinds={ba | ctl | allgrad, ...
    ctl | asyn, ...
    ba | ctl | allgrad,...
    ctl | asyn};
% zdat={-zphys1,-zphys1,-zphys2,-zphys2};
zdat={-phys(:,1),-phys(:,1),-phys(:,2),-phys(:,2)};
allX={0:100 25:100 0:100 25:100};
pc=[1 1 2 2];
fit_types={'poly3','poly3','poly2','poly2','poly2','poly2'};
% Robust={'off','Off','Off','Off'};
Robust={'LAR','LAR','LAR','LAR','poly2','poly2'};
clear cc
for i=1:c
    % NORMALIZED scores and fits:
    ind=allinds{i};
    x=allX{i};
    [xData, yData] = prepareCurveData( th(ind), zdat{i}(ind) );
    ft = fittype(fit_types{i} );
    opts.Normalize = 'on';
    opts.Robust=Robust{i};
    [fitresult1, gof1] = fit( xData, yData, ft, opts );
    p1 = predint(fitresult1,x,0.95,'functional','off');
    [xData, yData] = prepareCurveData( th(ind), behav(ind,1) );
    ft = fittype( 'poly2' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'LAR';
    opts.Normalize = 'on';
    [fitresult2, gof2] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    
    
    subplot(r,c,subinds(1,i))
    y1=fitresult1(x)-fitresult1(100);
    h=plot(x,y1,'r');
    hold on
    h.DisplayName= 'Physiology PC';
    y2=fitresult2(x) - fitresult2(100);
    h=plot(x,y2,'b');
    h.DisplayName= sprintf('Behavior PC%d',1);
    plot([0 100],[0 0],'--b')
    ylabel(sprintf('Normalized Scores',i))
    xlabel('%TH Remaining')
     set(gca,'Xdir','reverse','xtick',0:25:100)
    title(sprintf('Adj R-sqr: %1.3f',gof1.adjrsquare))
    ylim([-3 1.5])
    
    %Sliding pearson correlation of fits plot:
    subplot(r,c,subinds(2,i))
    y1=fitresult1(x);
    y2=fitresult2(x);    
    [cc,pp,nn]=movcorr(y1,y2,10,'Endpoints','fill');
%     [cc2]=xcorr2(y1,y2);
%     cc(pp>0.05,i)=nan;
    plot(x,cc,'r')
    hold on
    plot([0 100],[0 0 ],'--k')
    ylabel('Correlated')
    xlabel('%TH Remaining')
    set(gca,'Xdir','reverse','xtick',0:25:100)
end
bi_linkaxes('x')
 set(gca,'Xdir','reverse','xtick',0:25:100)
set(gcf,'pos',[ 930   402   468   225])
%% Figure 4C Alpha-syn behavior PC1 trend 
x=25:100;
figure
subinds=subplot_indexer(r,c);

% ind=~unictrl & ~unidep & ~asymIpsi & ~asymContra;
ind=  ctl | asyn;% | allgrad;

    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind),behav(ind,1) );
    ft = fittype( 'poly2' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'off';
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
%     plot(xData,yData,'.k');
    hold on
    plot(x,fitresult2(x),'k')
%     [px,py]=stdErrColor(x,p2(:,1),p2(:,2));
%     patch(px,py,'k')
    plot(x,p2,'--k')
    
%     plot(th(ctl),behav(ctl,1),'dk')
    t=[mean(behav(ctl,1),1),stdErr(behav(ctl,1),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
%     plot(mean(th(ctl)),behav(ctl,1),'dk')
    plot([0 100],mean(behav(ctl,1)).*[1 1],'--k')
    plot(th(asyn),behav(asyn,1),'oc')
%     plot(th(allgrad),behav(allgrad,1),'om')
%     plot(th(ba),behav(ba,1),'^b')
%     t=[mean(behav(ba,1),1),stdErr(behav(ba,1),1)];
%     errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Behavior PC1 Score',i))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
ylim([-6 4])
set(gcf,'pos',[680   650   337   328])

%% Overlay alphasyn trend w/ gradual PC1 trends:

x=0:100;
figure
r=1;c=1;
usePC=2;
subinds=subplot_indexer(r,c);

% ind=allgrad | ba | ctl
ind1= allgrad | ctl | ba | asyn;
ind2= asyn | ctl  ;
% ind= asyn | ctl  ;
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind1),phys(ind1,usePC) );
    ft = fittype( 'poly1' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'off'
    opts.Normalize = 'on';
    [fitresult2, gof1] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    hold on
    plot(x,fitresult2(x),'r')

%     plot(x,p2,'--r')
    x=25:100
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind2),phys(ind2,usePC) );
    ft = fittype( 'poly1' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'off'
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
%     plot(xData,yData,'.k');
    hold on
    plot(x,fitresult2(x),'b')
%     plot(x,p2,'--b')

    t=[mean(phys(ctl,usePC),1),stdErr(phys(ctl,usePC),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
    plot([0 100],mean(phys(ctl,usePC)).*[1 1],'--k')
    plot(th(allgrad),phys(allgrad,usePC),'om')
    plot(th(asyn),phys(asyn,usePC),'oc')
    t=[mean(phys(ba,usePC),1),stdErr(phys(ba,usePC),1)];
    errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Physiology PC%d Score',usePC))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
set(gcf,'pos',[680   650   337   328])
%% Overlay alphasyn trend w/ gradual PC2 trends:

x=0:100;
figure
r=1;c=1;
usePC=2;
subinds=subplot_indexer(r,c);
%Separate out Unilaterals:
% ind=allgrad | ba | ctl
ind1= allgrad | ctl ;
ind2= asyn | ctl  ;
ind3= asymIpsi | asymContra | uniContra | uniIpsi | ctl;
% ind= asyn | ctl  ;
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind1),phys(ind1,usePC) );
    ft = fittype( 'smoothingspline' );
    opts = fitoptions( 'Method', 'SmoothingSpline' );
    % opts.Normalize = 'on';
    opts.SmoothingParam=0.05072702091874635;
%     opts.SmoothingParam = 0.0117830793400168;

    [fitresult2, gof] = fit( xData, yData, ft, opts );
    hold on
    plot(x,fitresult2(x),'r')

    
    %Fit and plot asyn PC scores vs th
    [xData, yData] = prepareCurveData( th(ind2),phys(ind2,usePC) );
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    plot(x,fitresult2(x),'b')

    t=[mean(phys(ctl,usePC),1),stdErr(phys(ctl,usePC),1)];
    errorbar(mean(th(ctl)),t(1),t(2),'dk')
    plot([0 100],mean(phys(ctl,usePC)).*[1 1],'--k')
    plot(th(allgrad),phys(allgrad,usePC),'om')
    plot(th(asyn),phys(asyn,usePC),'oc')
    t=[mean(phys(ba,usePC),1),stdErr(phys(ba,usePC),1)];
    errorbar(mean(th(ba)),t(1),t(2),'^b')
    
    %Plot asym:
    [xData, yData] = prepareCurveData( th(ind3),phys(ind3,usePC) );
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    plot(x,fitresult2(x),'g')
    plot(th(ind3),phys(ind3,usePC),'og')
    
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Physiology PC%d Score',usePC))
    set(gca,'Xdir','reverse','xtick',0:25:100)
    
bins=[0 15 48 73 100];
% figure
lab={'Dep','30','60','85','Ctl'};
bi_Plot_Corrections
xlim([0 105])
set(gcf,'pos',[680   650   337   328])
ylim([-1.5 1.5])
%% pc1 vs pc2 vs th:
ind1= allgrad | asyn | ctl | ba;
figure
usePC=1;
[xData, yData] = prepareCurveData( th(ind1),phys(ind1,usePC) );
ft = fittype( 'poly3' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Robust = 'LAR'
opts.Normalize = 'on';
[fitresult1, gof] = fit( xData, yData, ft, opts );
p2 = predint(fitresult1,x,0.95,'functional','off');
y1=fitresult1(x);
% y1=y1-min(y1);
plot(x,(y1),'r')
hold on

usePC=2;
[xData, yData] = prepareCurveData( th(ind1),phys(ind1,usePC) );
% ft = fittype( 'smoothingspline' );
% opts = fitoptions( 'Method', 'SmoothingSpline' );
% opts.SmoothingParam=0.01;
ft = fittype( 'poly1' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
% opts.Robust = 'LAR'
% opts.Normalize = 'on';
[fitresult2, gof] = fit( xData, yData, ft, opts );
y2=fitresult2(x);
% y2=y2-min(y2);
plot(x,(y2),'c')
% set(gca,'xdir','reverse','xtick',0:25:100)

usePC=3;
[xData, yData] = prepareCurveData( th(ind1),phys(ind1,usePC) );
ft = fittype( 'smoothingspline' );
opts = fitoptions( 'Method', 'SmoothingSpline' );
opts.SmoothingParam=0.01;
[fitresult3, gof] = fit( xData, yData, ft, opts );
y3=fitresult3(x);
% plot(x,(y3-min(y3)),'c')
% set(gca,'xdir','reverse','xtick',0:25:100)

[xData, yData] = prepareCurveData( th(ind1),behav(ind1,1) );
ft = fittype( 'poly2' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Robust = 'LAR'
opts.Normalize = 'on';
[fitresult4, gof] = fit( xData, yData, ft, opts );
y4=fitresult4(x);
% y4=y4/3;
plot(x,(y4-min(y4)),'b')
% 
% z=(y4-min(y4))./(y1);
% zs=(y4-min(y4))-(y1);
% % plot(x,z,'--g');hold on;plot(x,zs,'--m')
% zd=(y4-min(y4)).*(y1);
% plot(x,zd,'--c')
%% PC1 and PC2 combined as distance:
ind1= allgrad | asyn | ctl | ba;
r=3;c=1;
figure
subplot(r,c,1)
plot(th(ind1),phys(ind1,1),'ok')
set(gca,'xdir','reverse')

subplot(r,c,2)
plot(th(ind1),phys(ind1,2),'ok')
set(gca,'xdir','reverse')

subplot(r,c,3)
p1=phys(ind1,1);
p2=phys(ind1,2);
p1=p1-min(p1);
p2=p2-min(p2);
pc12dist=sqrt(p1.^2 + p2.^2);
% pc12dist=phys(ind1,1).*phys(ind1,2);
plot(th(ind1),pc12dist,'ok')
bi_linkaxes('x')
set(gca,'xdir','reverse')

%% Nlinfit predict behavior from pc1 and pc2 -- separate fits using derivative
r=2;
c=2;
clear h
ind1= allgrad | asyn | ctl | ba;
x=0:100;
figure
subplot(r,c,1)
plot(th(ind1),phys(ind1,1),'ok')
hold on;
plot(x,y1,'r')
set(gca,'xdir','reverse')
ylabel('PC1 (Other Params)')

subplot(r,c,3)
plot(th(ind1),-phys(ind1,2),'ok')
hold on;
plot(x,-y2,'r')
set(gca,'xdir','reverse')
ylabel('PC2 (Synchrony)')


subplot(r,c,2)
b0=[1 -1 1 -1];
modelfun= @(b,x) b(1)+ b(2).*diff(x(:,1));
% modelfun= @(b,x) b(1)+ b(2).*diff(x(2:end,1)) + b(3).*diff(x(:,1),2);
[mB,R,J,COVB,MSE]=nlinfit([y1,y2],y4(2:end),modelfun,b0);
h(1)=plot(x,y4,'b');
hold on
% mB(1)=mB(1)+1.179+0.9652;
% mB(1)=0;
h(2)=plot(x(2:end),modelfun(mB,[y1,y2]),'--r');
legend(h,{'Observed','Predicted'})
ylabel('Behavior Score')
set(gca,'xdir','reverse')
title(sprintf('y = %2.1f*(dfPC1/dx)(x) + %2.1f',mB(2),mB(1)))

subplot(r,c,4)
b0=[1 -1 -1];
modelfun= @(b,x) b(1)+ b(2).*diff(x(:,1)) + b(3).*x(2:end,2);
[mB,R,J,COVB,MSE]=nlinfit([y1,y2],y4(2:end),modelfun,b0);
plot(x,y4,'b')
hold on
plot(x(2:end),modelfun(mB,[y1,y2]),'--r')
set(gca,'xdir','reverse')
title(sprintf('y = %2.1f*(dfPC1/dx)(x) + %2.1f*fPC2(x) + %2.1f',...
    mB(2),mB(3),mB(1)))
ylabel('Behavior Score')
xlabel('%TH Remaining')
% ind1= allgrad | asyn | ctl | ba;


% [ts,sind]=sort(th(ind1));
% y=behav(ind1,1);
% y=y(sind);
% x=phys(ind1,1:2);
% x=x(sind,:);
% figure
% plot(y(2:end),modelfun(mB,x),'ok')

% plot(x,ytest./y1,'--b')
% plot(x,zd./y1,'k')
set(gcf,'pos',[   680   567   583   411])
%%
ind1= allgrad | asyn | ctl | ba;
y1r=phys(ind1,1);
y2r=phys(ind1,2);
xr=th(ind1);
br=behav(ind1,1);
model = @(x,y1,y2) [x x.^2 ]; %Possible to predict behavior from TH
% model = @(x,y1,y2) [y1, y2, x.*y1, x.*y2, x.*y1.^2, x.*y2.^3]; 
[beta,dev,stats]=glmfit(model(xr,y1r,y2r),br,'normal');
bPredict=glmval(beta,model(x',y1,y2),'identity');
% bPredictR=glmval(beta,model(xr,y1r,y2r),'identity');
figure;
plot(xr,br,'ok')
hold on
plot(x,bPredict,'r')
% plot(xr,bPredictR,'b')
stats.p

%% 1) Bin physiology PCA like in the paper:
bins=[0 15 48 73 100];
figure
lab={'Dep','30','60','85','Ctl'};
[c,ind]=histc(th,bins);
for i=1:3
    d0={};
    subplot(3,1,i)
    for ii=1:length(bins)        
        d0{ii}=phys(ind==ii,i);
    end
    exOut=[]; isPaired=0; anovaFirst=1; mc=1; useWilcox=0; negError=1; plotMedians=0;
    [h,pAll,mseO]=barMeanSig2(d0,lab,{[1 5]},{'k'},...
        exOut,isPaired,anovaFirst,mc,useWilcox,negError,plotMedians);
    ylabel(sprintf('PC %d',i))
end

%% Hyperbolic sine fit-inspired function (phys pc1 vs. th)
% zphys=-nanzscore(phys(:,1),[],1);
abrev={'G85','G60','G30','G05','BA','A30','A60','A85',...
    'UDep','AsymDep','AsymCtrl','UCtrl','Ctrl'};
r=4;c=3;
x=0:100;
figure
subinds=subplot_indexer(r,c);
%Separate out Unilaterals:
ind=~uniContra & ~uniIpsi & ~asymContra & ~asymIpsi;
zd={zphys1(ind), zphys2(ind), zphys3(ind)};
fit_types={'poly3','poly2','poly3'};
Robust={'LAR','Off','LAR'};
for i=1:c
    %Fit and plot physiology PC1 scores vs th:
    [xData, yData] = prepareCurveData( th(ind),phys(ind,i) );
    ft = fittype( fit_types{i} );
     opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Normalize = 'on';
    opts.Robust = Robust{i};
    [fitresult1, gof] = fit( xData, yData, ft,opts );
    p1 = predint(fitresult1,x,0.95,'functional','off');
    subplot(r,c,subinds(1,i))
    plot(xData,yData,'.k');
    hold on
    plot(x,fitresult1(x),'r')
    plot(x,p1,'--r')
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Phsyiology PC%d Score',i))
     set(gca,'Xdir','reverse','xtick',0:25:100)
     
    %Fit and plot behavior PC1 scores vs th
    [xData, yData] = prepareCurveData( th(ind),behav(ind,1) );
    ft = fittype( 'poly2' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'LAR'
    opts.Normalize = 'on';
    [fitresult2, gof] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    
    subplot(r,c,subinds(2,i))
    plot(xData,yData,'.k');
    hold on
    plot(x,fitresult2(x),'b')
    plot(x,p2,'--b')
    title(sprintf('Adj R-Sqr: %1.3f',gof.adjrsquare))
    xlabel('%TH Remaining')
    ylabel(sprintf('Behavior PC1 Score',i))
     set(gca,'Xdir','reverse','xtick',0:25:100)
     
    % NORMALIZED scores and fits:
    [xData, yData] = prepareCurveData( th(ind), zd{i} );
    ft = fittype(fit_types{i} );
    opts.Normalize = 'on';
    opts.Robust=Robust{i};
    [fitresult1, gof1] = fit( xData, yData, ft, opts );
    p1 = predint(fitresult1,x,0.95,'functional','off');
    [xData, yData] = prepareCurveData( th(ind), zbehave1(ind) );
    ft = fittype( 'poly2' );
    opts = fitoptions( 'Method', 'LinearLeastSquares' );
    opts.Robust = 'LAR';
    opts.Normalize = 'on';
    [fitresult2, gof2] = fit( xData, yData, ft, opts );
    p2 = predint(fitresult2,x,0.95,'functional','off');
    
    
    subplot(r,c,subinds(3,i))
    h=plot(x,fitresult1(x),'r');
    hold on
    h.DisplayName= 'Physiology PC1';
    h=plot(x,fitresult2(x),'b');
    h.DisplayName= sprintf('Behavior PC%d',i);
    ylabel(sprintf('Normalized Scores',i))
    xlabel('%TH Remaining')
     set(gca,'Xdir','reverse','xtick',0:25:100)
     
    %Sliding pearson correlation of fits plot:
    subplot(r,c,subinds(4,i))
    y1=fitresult1(x);
    y2=fitresult2(x);
    
    [cc2,pp,nn]=movcorr(y1,y2,3,'Endpoints','fill');
    plot(x,cc2,'r')
    hold on
    plot([0 100],[0 0 ],'--k')
    ylabel('Correlation coefficient')
    xlabel('%TH Remaining')
    set(gca,'Xdir','reverse','xtick',0:25:100)
end
bi_linkaxes('x')
 set(gca,'Xdir','reverse','xtick',0:25:100)
set(gcf,'pos',[  680   219   604   759])


